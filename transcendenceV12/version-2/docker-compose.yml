version: "3"
services:
  db:
    container_name: postgres_container
    image: postgres:latest
    env_file:
      - postgres.env
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - app-network

  nestjs:
    container_name: nestjs_container
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - '3000:3000'
      - '8082:8082'
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/node_modules/
    networks:
      - app-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_db:/var/lib/pgadmin
    env_file:
      - pgadmin.env
    depends_on:
      - db

  frontend:
    container_name: vuejs_container
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      args:
        - VUE_APP_CHAT_PORT=${CHAT_PORT}
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules/
    depends_on:
      - nestjs
    networks:
      - app-network



# # test
#   frontend:
#     container_name: reactjs_container
#     build:
#       context: ./frontend
#       dockerfile: ./Dockerfile
#     ports:
#       - '8080:3000'
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules/
#     depends_on:
#       - nestjs

networks:
  app-network:
    driver: bridge


volumes:
  postgres_db:
  pgadmin_db:

